package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2018_2.*
import jetbrains.buildServer.configs.kotlin.v2018_2.BuildType
import jetbrains.buildServer.configs.kotlin.v2018_2.triggers.vcs
import jetbrains.buildServer.configs.kotlin.v2018_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with id = 'CandyEngineScreenshotTests'
in the project with id = 'ScreenshotTests', and delete the patch script.
*/
create(RelativeId("ScreenshotTests"), BuildType({
    id("CandyEngineScreenshotTests")
    name = "CandyEngine"

    artifactRules = """keforms.engine\Tests\Screenshots\Approvals\** => Screenshots.zip"""

    params {
        text("Git.Branch.Default", "refs/heads/master", display = ParameterDisplay.HIDDEN, allowEmpty = true)
        text("Git.Url.Fetch", "git@git.skbkontur.ru:ke/candy.tests.git", display = ParameterDisplay.HIDDEN, allowEmpty = true)
        param("env.Path", """C:\Users\svc_ke-forms-agent\AppData\Roaming\npm;%env.Path%""")
        text("Git.Branch.Specification", "+:refs/heads/*", display = ParameterDisplay.HIDDEN, allowEmpty = true)
    }

    vcs {
        root(RelativeId("KeformsEngine"), "+:.=>Candy.Engine")

        checkoutMode = CheckoutMode.ON_AGENT
    }

    steps {
        step {
            name = "Install candy tools"
            type = "jonnyzzz.npm"
            param("npm_commands", """
                uninstall @kontur.candy/tools --global --force
                install @kontur.candy/tools --global --force
            """.trimIndent())
        }
        step {
            name = "Install packages"
            type = "jonnyzzz.npm"
            param("teamcity.build.workingDir", "Candy.Engine")
            param("npm_commands", "ci")
        }
        step {
            name = "Run tests"
            type = "jonnyzzz.npm"
            param("teamcity.build.workingDir", "Candy.Engine")
            param("npm_commands", """run run-script -- Scripts/runScreenshotTests.ts -- ..\Candy.Web""")
        }
    }

    triggers {
        vcs {
        }
    }

    dependencies {
        dependency(AbsoluteId("FormsModules_Candyforms_Web_Build")) {
            snapshot {
                onDependencyFailure = FailureAction.FAIL_TO_START
            }

            artifacts {
                cleanDestination = true
                artifactRules = "+:Candy.Api.%dep.FormsModules_Candyforms_Web_Build.version%.nupkg!/**=>Candy.Web"
            }
            artifacts {
                cleanDestination = true
                artifactRules = """+:LocalSettings.zip!/**=>Candy.Web\"""
            }
        }
        artifacts(RelativeId("Build")) {
            buildRule = lastSuccessful("+:pull/*")
            artifactRules = "retail-ui-*.tgz"
        }
    }
}))

