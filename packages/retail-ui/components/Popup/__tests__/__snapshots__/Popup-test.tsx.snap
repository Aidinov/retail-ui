// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popup snapshots:  open and close popup: closed popup 1`] = `
<Popup
  anchorElement={
    <button
      id="test-id"
    >
      test
    </button>
  }
  disableAnimations={false}
  hasPin={false}
  hasShadow={false}
  margin={10}
  opened={false}
  pinOffset={16}
  pinSize={8}
  popupOffset={0}
  positions={
    Array [
      "bottom left",
      "bottom right",
      "top left",
      "top right",
    ]
  }
  useWrapper={false}
>
  <RenderContainer
    anchor={null}
  >
    <RenderInnerContainer
      anchor={null}
      domContainer={null}
      rootId={1}
    />
  </RenderContainer>
</Popup>
`;

exports[`Popup snapshots:  open and close popup: closed popup again 1`] = `
<Popup
  anchorElement={
    <button
      id="test-id"
    >
      test
    </button>
  }
  disableAnimations={false}
  hasPin={false}
  hasShadow={false}
  margin={10}
  opened={false}
  pinOffset={16}
  pinSize={8}
  popupOffset={0}
  positions={
    Array [
      "bottom left",
      "bottom right",
      "top left",
      "top right",
    ]
  }
  useWrapper={false}
>
  <RenderContainer
    anchor={null}
  >
    <RenderInnerContainer
      anchor={null}
      domContainer={
        <div
          class="react-ui"
          data-rendered-container-id="1"
        />
      }
      rootId={1}
    />
  </RenderContainer>
</Popup>
`;

exports[`Popup snapshots:  open and close popup: opened popup 1`] = `
<Popup
  anchorElement={
    <button
      id="test-id"
    >
      test
    </button>
  }
  disableAnimations={false}
  hasPin={false}
  hasShadow={false}
  margin={10}
  opened={true}
  pinOffset={16}
  pinSize={8}
  popupOffset={0}
  positions={
    Array [
      "bottom left",
      "bottom right",
      "top left",
      "top right",
    ]
  }
  useWrapper={false}
>
  <RenderContainer
    anchor={null}
  >
    <RenderInnerContainer
      anchor={null}
      domContainer={
        <div
          class="react-ui"
          data-rendered-container-id="1"
        >
          <div
            class="popup css-140yvgu transition-enter-active transition-enter-bottom"
            style="top: 10px; left: 0px; z-index: 1000;"
          >
            <div
              class="content css-r93459"
            >
              <div
                class="css-fopoh2"
              >
                Test content
              </div>
            </div>
          </div>
        </div>
      }
      rootId={1}
    >
      <Portal
        containerInfo={
          <div
            class="react-ui"
            data-rendered-container-id="1"
          >
            <div
              class="popup css-140yvgu transition-enter-active transition-enter-bottom"
              style="top: 10px; left: 0px; max-width: 500px; z-index: 1000;"
            >
              <div
                class="content css-r93459"
              >
                <div
                  class="css-fopoh2"
                >
                  Test content
                </div>
              </div>
            </div>
          </div>
        }
      >
        <LifeCycleProxy
          onDidUpdate={[Function]}
          props={
            Object {
              "location": null,
            }
          }
        >
          <Transition
            appear={true}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 0,
                "exit": 200,
              }
            }
            unmountOnExit={true}
          >
            <ZIndex
              className="popup css-140yvgu transition-enter-top"
              delta={1000}
              key="dummy"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              render={true}
              style={
                Object {
                  "left": -9999,
                  "maxWidth": undefined,
                  "top": -9999,
                }
              }
            >
              <div
                className="popup css-140yvgu transition-enter-top"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  Object {
                    "left": -9999,
                    "maxWidth": 500,
                    "top": -9999,
                    "zIndex": 1000,
                  }
                }
              >
                <div
                  className="content css-r93459"
                >
                  <div
                    className="css-fopoh2"
                    style={
                      Object {
                        "backgroundColor": undefined,
                      }
                    }
                  >
                    Test content
                  </div>
                </div>
              </div>
            </ZIndex>
          </Transition>
        </LifeCycleProxy>
      </Portal>
      <Portal
        key="portal-ref"
        rt_rootID={1}
      >
        <noscript
          data-render-container-id={1}
        />
      </Portal>
    </RenderInnerContainer>
  </RenderContainer>
</Popup>
`;
